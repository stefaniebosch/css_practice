/*selector {declaration;} --,same as-- selector {property:value;}
the universal selector (*) selects every element on the page, ex.: * {...:...} applies to everything
if multiple selectors have the same style definitions, they can be grouped together: h1, h2, h3 {...:...}*/

/*ids and class names cannot start with numbers*/

/*if multiple style sheets are used, the most recently read style sheet will be used ->cascading order 
ex: first inline, then external/internal (depending on which was defined first), then browser default*/

/*background properties can all be in one declaration as long as they are declared in this order, ex:
background : background-color  background-image background-repeat backgrount-attachment background-position; 
background { #ffffff url("hi.png") no-repeat right top; } */

/*<div> <p> ... </p> </div> <--- div is parent element of p, so p can inherit margin property of div*/

/* font: font-style font-variant font-weight font-size/line-height font-family ...font-size and font-family required*/

/*html elements*/

table, td, th {
    border: 1px solid darkgray;
    /*border-bottom: ... to just have horizontal dividers*/
    /*if table element has id, then use ex.: #id td, #id th, #id tr:hover, etc.*/
}

table {
    width: 50%; /*max-width is more compatible for smaller screen sizes (vs. width)*/
    border-collapse: collapse;
    margin: auto;
    position: static; /*default positioning*/
}

th {
    height: 30px;
    background-color: deeppink;
    color: black;
}

tr:nth-child(even) {
    background-color: #d1cccc;;
}

tr:hover {
    background-color: #fcdef9;
}

th, td {
    padding: 15px;
    text-align: left;
    /*text-align: center, or left, or right; th is center by default; td left by default*/
    /*vertical-align: bottom/middle/top;, th and td have middle by default*/
}

body {
    background-color: lavenderblush;
    font-size: 100%; /*set default font-size in percent for body, so setting 'em' everywhere else works when user resizes font*/
}

h1 {
    text-align: center;
    font-family: "Courier New", Courier, monospace; /*first is wanted font, second and third are more generic back up fonts*/
    /*some fonts pair really well together, examples on w3schools css tutorial fonts -> font pairings*/
    /*^ex. Helvetica for headings, Garamond for text*/
    font-size: 2.5em; /*=40px, but this way the size scales when users resize the text size of browser; pixels/16=em */
    /*can also set font-size in vw (viewport width), 1vw = 1% of viewport width; scales with size of viewport*/
    font-variant: normal;
}

h4 {
    text-align: center;
}

p {
    color: slateblue;
    text-align: center;
}

/*individual ids*/

#happy_shibe {
    /*to center an image, set width, display to block, and set left and right margins*/
    width: 15%;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

#auto_overflow {
    overflow: auto;
    /*can also just change overflow-x or overflow-y values specifically instead of both at once*/
    width: 300px;
    height: 50px;
    border: 1px dotted black;
    float: right; /*or left, or none (default)*/
}

#scroll_overflow {
    overflow: scroll;
    width: 300px;
    height: 50px;
    border: 1px dotted black;
    float: right;
}

#hidden_overflow {
    overflow: hidden;
    width: 300px;
    height: 50px;
    border: 1px dotted black;
    float: right;
}

#visible_overflow {
    /*can use .clearfix::after{content:"";clear:both;display:table;} to solve overflow problem*/
    overflow: visible; /*default*/
    width: 300px;
    height: 50px;
    border: 1px dotted black;
    float: right;
}

#link_list li {
    display: inline; /*makes elements inline vs block, so they do not start on a new line*/
    /*display: none; does not take up space, page acts as if it is not there*/
    /*visibility: hidden; does not show up but it still takes up space as if it was being shown*/
}

#div_table {
    overflow-x: auto; /*displays horizontal scroll bar if screen too small to show all content*/
    clear: right; 
    /*moves element under defined oriented element (eg. overflow elements are float: right, so here
    clear: right; moves table under right element; can also be left, or both*/
}

#material_icons{
    text-align: left;
    color: black;
}

#middle_cloud {
    font-size: 50px;
}

#large_cloud {
    font-size: 100px;
}

#large_blue_cloud {
    font-size: 100px;
    color: lightblue;
}

#large_red_cloud {
    font-size: 100px;
    color: lightcoral;
}

#computer_icon {
    font-size: 100px;
    color:rgb(104, 104, 104);
    text-shadow: 5px 5px 10px rgb(7, 49, 23);
    position: sticky; /*toggles between relative and fixed positioning; fixed when scrolled past a certain point, else relative*/
    bottom: 5px;
    z-index: -1; /*when overlapping with other elements, it will be positioned behind them*/
}

#left_align {
    font-size: 20px;
    text-align: left;
    text-transform: uppercase; /*or lowercase, capitalize*/
    letter-spacing: -2px;
    text-shadow: 2px 2px 5px purple; /* horizontal shadow, vertical shadow, blur effect, color*/
}

#center_align {
    text-align: center; /*centers text inside element*/
    text-decoration: line-through; /*or overline, underline (usually just used for links), none to make links not have underline*/
    letter-spacing: 5px;
    word-spacing: 10px; /*can also be negative*/
    /*white-space: nowrap -> makes the words run off the page vs get wrapped to next line*/
    font-weight: bold; /*or normal, lighter, a specific number*/
}

#right_align {
    text-align: right;
    /*vertical-align: top/middle/bottom -> ex. align image within text */
    direction: rtl;
    unicode-bidi: bidi-override;
}

#justify_align {
    text-align: justify;
    width: 100px;
    border: 1px solid black;
    padding: 10px;
    text-indent: 30px;
    line-height: 0.7;
}

#box_model {
    color: goldenrod;
    width: 300px;
    padding: 30px;
    border: 20px solid khaki;
    margin: 10px;
    outline-style: solid;
    outline-color: black; /*can also use 'invert'*/
    outline-width: thin;
    outline-offset: 3px;
    /*outline shorthand-> outline: outline-width outline-style outline-color*/
    /*outline does not count towards total width; outline can overlap with other elements*/
    /*total width = 300px + 30px + 30px + 20px + 20px + 10px + 10px = 420px */
}

#special_paragraph {
    color: green;
    font-size: 20px;
}

#background_test {
    color: white;
    background-color: sienna;
    opacity: 0.3; /*also makes child elements transparent*/
}

#background_test2 {
    color: black;
    background-color: rgb(201,160,207, 0.8); /*child elements are not transparent; just the background*/
    margin: 0 0 50px 0; 
    /*test2 has 50 bottom margin and test3 has 20 top margin, because of margin collapse instead of 70px
    between the two, there is only 50px*/
}

#background_test3 {
    color: hsl(0, 0%, 71%);
    background-color: rgb(50,50,50);
    margin: 20px 0 0 0;
}

#background_test4 {
    color: #f0f; /*same as ff00ff*/
    background-color: #faf; /*same as ffeeff*/
    width: 300px;
    margin: auto; /*centers element, margin equally placed on left and right sides*/
}

#background_test5 {
    color: hsl(30,77%,12%,0.9);
    background-color: hsl(214,44%,63%);
    /*also margin-top, margin-bottom, margin-left, margin-right, or margin: top right bottom left*/
    margin: 70px; /*creates space around elements, can also use percentages or auto or inherit*/
}

#border_test {
    color: darkolivegreen;
    border: 7px dotted chartreuse; /*shorthand for border-width border-style (required) border-color*/
    /* height and width does not include padding, margin, or borders; can use auto, length, percent, initial, inherit*/
    /*can also set min-width and min-height*/
    /*use max-width property instead of width so if screen is smaller, the element will also shrink vs width it stays the same*/
    height: 50px;
    width: 75%;
    margin-left: 13%;
    font-variant: small-caps;
}

#border_test2 {
    border-style: inset;
    border-width: 3px 10px; /* x y -> top/bottom left/right; w x y z -> top, right, bottom, left x y z -> top, left/right, bottom*/
    font-style: italic;
}

#border_test3 {
    border-top-style: double; /*border-top-color, border-top-width*/
    border-right-style: solid;
    border-bottom-style: ridge;
    border-left-style: dashed;
    border-width: 4px;
    border-color: green blue indigo purple;
}

#border_test4 {
    border-top: 5px solid salmon;
    background-color: lightgray;
    padding: 50px;
    width: 300px;
    box-sizing: border-box;
    margin: auto; /*centers the element, automatically puts remaining space in left and right margins*/
    /*width propery must be set (but not at 100%) for margin:auto to work*/
}

#border_test5 {
    border: 3px solid goldenrod;
    border-radius: 12px;
    /* padding: top right bottom left*/
    /* if padding (left/right) and width are defined, the total width is width + left padding + right padding*/
    /* add box-sizing: border-box; property to keep width without adding padding space*/
    padding: 70px; /*also padding-top, padding-right, padding-bottom, padding-left, can use length, percent, inherit*/
}

#background_image {
    color: yellow;
    background-repeat: no-repeat; /*ex: repeat-x or repeat-y*/
    background-image: url(dandelions.jpg);
    background-position: center; /*ex: right top*/
    background-attachment: scroll; /*image scrolls up with page, else use fixed*/
    position: fixed; /*always stays in same position even if page is scrolled; positioned relative to the viewport*/
    width: 300px;
    margin: auto;
    bottom: 0;
    right: 0;
}

/*classes*/

.centered_flexbox {
    display: flex;
    justify-content: center; /*horizontally aligned*/
    align-items: center; /*vertically aligned*/
    height: 100px;
    border: 3px dotted darkorchid;
}

.right_align2 {
    float: right;
    border: 2px dashed darkkhaki;
    padding: 5px;
}

.right_align {
    position: absolute; /*using this, elements can overlap each other*/
    right: 0px;
    border: 2px dashed darkkhaki;
    padding: 5px;
}

.inline {
    display: inline; /*default for span element, but cannot set width or height*/
    width: 100px;
    height: 100px;
    padding: 5px;
    border: 2px solid olive;
    background: orchid;
}

.inline-block {
    display: inline-block; /*can set width and height, is on same line as other elements*/
    width: 100px;
    height: 100px;
    padding: 5px;
    border: 2px solid olive;
    background: orchid;
}

.block {
    display: block; /*starts on new line*/
    width: 100px;
    height: 100px;
    padding: 5px;
    border: 2px solid olive;
    background: orchid;
}

.menu {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333;
}

.menu_item {
    float: left;
}

.link {
    display: inline-block; /*items displayed horizontally, often used for horizontal navigation links*/
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}

.link:hover {
    background-color: #111;
}

/*class can be assigned to which link is active, figure out how to change this probably when learning javascript*/
.active {
    background-color: blue;
}

/*if element is taller than the element containing it, and it is positioned by float, it will overflow outside of its
container. use clearfix hack to "fix" this problem*/
.clearfix::after {
    content: "";
    clear: both;
    display: table;
}

.box {
    float: left;
    width: 33.3%;
    padding: 50px;
    box-sizing: border-box; /*includes padding and borders in the boxes size, so all three boxes fit on same line*/
    text-align: center;
}

.first {
    background-color: rgb(66, 66, 66);
}

.second {
    background-color: rgb(173, 173, 173);
}

.third {
    background-color: rgb(230, 228, 228);
}

ul.picture_bullets {
    list-style: circle inside url('dog_circle.jpg');
    /*order: list-style: list-style-type list-style-position list-style-image;*/
    /*list-style-position: inside; pushes the text-> is 'outside' by default*/
    position: relative; /*positioned relative to its normal position, other content will not be adjusted to fill gap*/
    /*position: absoute; positioned relative to the nearest positioned ancestor (anything except static position default)*/
    left: 50px;
}

ul.unordered1 {
    list-style-type: circle; 
    /*set to 'none' to remove bullets, also set margin and padding to 0 to remove default margin and padding*/
    background: rgb(7,239,181);
    padding: 20px;
}

ol.ordered1 {
    list-style-type: hiragana;
    background: rgb(30,11,96);
    color: white;
    padding: 50px;
}

ol.ordered1 li {
    /*^space=descendant selector: selects all li elements that are inside the ol.ordered1 element*/
    /*> is child selector, eg. ol.ordered1 > li*/
    /*adjacent sibling selector: ol.ordered1 + li ---> select element directly after another element*/
    /*general sibling selector: ol.ordered ~ li ---> select elements that are next sibling of specified element*/
    background: rgb(74, 46, 179);
    margin: 5px;
}

ul.unordered1 li {
    background: rgb(11, 172, 131);
    padding: 5px 0; /*to vertically center text; can also set line-height and height as same number*/
    text-align: center; /*to horizontally center text*/
}

a.first_link:link {
    color:blue;
    /*text-decoration: none -> removes underline from link (or text-decoration: underline;)*/
}

a.first_link:visited {
    color:lightskyblue;
}

a.first_link:hover { /*a:hover must come after a:link and a:visited*/
    color: maroon;
    background-color: lightgray;
    cursor: wait;
}

a.first_link:active { /*a:active must come after a:hover*/
    color: gray;
}

a.second_link:link, a.second_link:visited, a.second_link:hover, a.second_link:active {
    border: 2px solid rgb(7, 49, 23);
    color: black;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
}

a.second_link:hover {
    background-color:rgb(7, 49, 23);
    color:peachpuff;
    cursor: crosshair;
}

p.orange {
    font-size: 10px;
}

.orange {
    color: orange;
}

.large {
    font-size: 25px;
}